name: container-build-and-push

on:
  workflow_call:
    inputs:
      language:
        description: "Programming language (e.g., go, python, rust)"
        required: true
        type: string
        default: "go"
      source_path:
        description: "Relative path to source code"
        required: true
        type: string
        default: "."
      language_version:
        description: "Version of the programming language"
        required: false
        type: string
        default: "latest"
      app_name:
        description: "Name of the built application binary or main executable/script"
        required: false
        type: string
        default: "app"
      build_flags:
        description: "Build flags or options for the build process"
        required: false
        type: string
        default: ""
      target_os:
        description: "Target OS for cross-compilation (if applicable)"
        required: false
        type: string
        default: "linux"
      target_arch:
        description: "Target architecture for cross-compilation (if applicable)"
        required: false
        type: string
        default: "amd64"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          path: project

      - name: Checkout Containerfiles Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/containerfiles
          ref: main
          sparse-checkout: |
            ${{ inputs.language }}
          sparse-checkout-cone-mode: false
          path: containerfiles

      - name: Check if `env.list` Exists
        run: |
          if [ ! -f "project/env.list" ]; then
            echo "env.list not found, creating an empty file..."
            touch project/env.list
          fi

      - name: Build Container Image with Podman
        run: |
          podman build -f containerfiles/${{ inputs.language }}/Containerfile \
            --build-arg LANGUAGE_VERSION=${{ inputs.language_version }} \
            --build-arg APP_NAME=${{ inputs.app_name }} \
            --build-arg BUILD_FLAGS="${{ inputs.build_flags }}" \
            --build-arg TARGET_OS=${{ inputs.target_os }} \
            --build-arg TARGET_ARCH=${{ inputs.target_arch }} \
            --build-arg ENV_FILE=env.list \
            -t ${{ vars.QUAY_REPOSITORY_PATH }}:latest \
            project/${{ inputs.source_path }}

      - name: Push Image to Quay
        run: |
          echo "${{ secrets.QUAY_ROBOT_PASSWORD }}" | podman login -u='${{ vars.QUAY_ROBOT_USERNAME }}' --password-stdin ${{ vars.QUAY_DOMAIN }}
          podman push ${{ vars.QUAY_REPOSITORY_PATH }}:latest
